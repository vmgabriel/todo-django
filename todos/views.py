"""Http View"""

# Libraries
from django.shortcuts import redirect
from django.urls import reverse_lazy
from django.http import (
    HttpResponse,
    HttpRequest,
    Http404,
    HttpResponseRedirect
)
from django.db.models import Count
from django.views import generic

# Models
from .models import Card, Board

# Forms
from .forms import BoardForm, CardForm


class IndexView(generic.TemplateView):
    """Index Class"""
    template_name = 'index.html'


class DetailBoardView(generic.detail.DetailView):
    """Detail Board View"""
    model = Board
    template_name = 'boards/detail.html'

    def get_context_data(self, **kwargs):
        """Context generated by detail board"""
        context = super().get_context_data(**kwargs)
        context['cards'] = Card.objects.filter(board_ref=context['board'].id)
        return context


class DetailCardView(generic.detail.DetailView):
    """Detail Card View"""
    model = Card
    template_name = 'cards/detail.html'


class ListBoardView(generic.list.ListView):
    """List Board View"""
    model = Board
    template_name = 'boards/index.html'

    def get_queryset(self):
        """Get the queryset"""
        return Board.objects.annotate(len_cards=Count('card'))


class CreateBoardView(generic.edit.FormView):
    """Create Board"""
    template_name = 'boards/create.html'
    form_class = BoardForm
    success_url = 'todos:boards'

    def get_context_data(self, **kwargs):
        """Get Context Data"""
        context = super(CreateBoardView, self).get_context_data(**kwargs)
        context['mode'] = 'Save'
        return context

    def form_valid(self, form):
        self.object = form.save(
            commit=False,
            **{'user': self.request.user}
        )
        self.object.save()
        return redirect(self.get_success_url())


class CreateCardView(generic.edit.FormView):
    """Create Card"""
    template_name = 'cards/create.html'
    form_class = CardForm
    success_url = 'todos:board_detail'

    def get_context_data(self, **kwargs):
        """Get Context Data"""
        context = super(CreateCardView, self).get_context_data(**kwargs)
        context['board_id'] = self.kwargs.get('pk')
        context['mode'] = 'Save'
        return context

    def form_valid(self, form):
        """Get Form Valid"""
        self.object = form.save(
            commit=False,
            **{'board': self.kwargs.get('pk')}
        )
        new_card = self.object.save()
        return redirect(
            self.get_success_url(),
            self.kwargs.get('pk')
        )


class EditBoardView(generic.edit.UpdateView):
    """Edit Board View"""
    model = Board
    fields = ['title']
    template_name = 'boards/create.html'
    success_url = 'todos:boards'

    def get_context_data(self, **kwargs):
        """Get Context Data"""
        context = super(EditBoardView, self).get_context_data(**kwargs)
        context['mode'] = 'Update'
        return context

    def form_valid(self, form):
        """Get Form Valid"""
        self.object = form.save(
            commit=False
        )
        self.object.save()
        return redirect(
            self.get_success_url()
        )


class DeleteBoardView(generic.edit.DeleteView):
    """Delete Board View"""
    model = Board
    success_url = reverse_lazy('todos:boards')
    template_name = 'boards/confirm_delete.html'
